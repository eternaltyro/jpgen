#= require jquery-1.9.0.min
#= require prng
#= require jquery.ba-serializeobject
#= require google-analytics-tracking

PASSWORD_COUNT = 10
WORDS = '<%= data.words.join(' ') %>'.split(' ')
sum = 0
for word in WORDS
  sum += word.length
WORDS_AVG_LENGTH = sum / WORDS.length
SYMBOLS = '! @ # $ % ^ & * ( )'.split(' ')

# provide ability to call a constructor with an array of args
# from http://stackoverflow.com/a/1608546/417839
new_Xorshift03_with_args = ( ->
  F = (args) ->
    Xorshift03.apply this, args

  F.prototype = Xorshift03.prototype

  (args) ->
    new F(args)
)()

jQuery ->
  $box = $('#entropy_box')
  entropy = []
  $box.on 'mousemove', (event) ->
    # seed random number generator with the current date stamp (in milliseconds) plus
    # collected mouse movement entropy
    entropy.push +new Date
    entropy.push event.clientX
    entropy.push event.clientY
    # keep the entropy array at a reasonable length
    entropy = entropy.slice (entropy.length - 50) if entropy.length > 100
    # create a new Xorshift03 object with entropy array
    prng = new_Xorshift03_with_args entropy
    # generate passwords with our seeded random number generator and options
    passwords = generate_passwords prng
    display_passwords passwords

  display_passwords = (passwords) ->
    $table_rows = $('table.passwords tbody tr')

    $table_rows.each (i) ->
      password = passwords[i].join('')
      $(this.children[0]).text password
      $(this.children[1]).text password.length

  generate_passwords = (prng) ->
    # serialize the form elements into an object with name: value pairs
    options = $('form').serializeObject()

    passwords = []
    for i in [1..PASSWORD_COUNT] by 1
      password = []
      # generate a password based on options
      for j in [1..options.words] by 1
        rand_selection = Math.floor(prng() * WORDS.length)
        password.push uc_first(WORDS[rand_selection])
      # insert number?
      for k in [0...options.numbers] by 1
        at = Math.floor(prng() * (password.length + 1))
        password.splice at, 0, Math.floor(prng() * 10)
      # insert symbol?
      for k in [0...options.symbols] by 1
        at = Math.floor(prng() * (password.length + 1))
        password.splice at, 0, SYMBOLS[Math.floor(prng() * SYMBOLS.length)]
      passwords.push password
    passwords

  uc_first = (s) ->
    s.charAt(0).toUpperCase() + s.slice(1)

  # generate passwords on init and when select values change
  update = ->
    entropy.push +new Date
    display_passwords generate_passwords(new_Xorshift03_with_args(entropy))

  update()

  $('select').on 'change', (event) -> update()