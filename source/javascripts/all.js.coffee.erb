#= require jquery-1.9.0.min
#= require sjcl/sjcl
#= require jquery.ba-serializeobject
#= require google-analytics-tracking

PASSWORD_COUNT = 10
WORDS = '<%= data.words.join(' ') %>'.split(' ')
SYMBOLS = '! @ # $ % ^ & * ( )'.split(' ')
SEPARATORS =
  '-': '-'
  '(none)': ''
  '(space)': ' '

start = ->
  $('div#passwords').removeClass('not-ready')
  $('div#entropy-helper').hide()
  $box = $('#entropy_box')
  entropy = []
  options = {}
  $box.on 'mousemove', (event) ->
    display_passwords generate_passwords()

  display_passwords = (passwords) ->
    $table_rows = $('table.passwords tbody tr')

    $table_rows.each (i) ->
      password = passwords[i].join(SEPARATORS[options.separator])
      $(this.children[0]).text password
      $(this.children[1]).text password.length

    # flash fade
    $animate = $('table.passwords')
    $animate
      .addClass('flash')
    window.setTimeout ->
      $animate
        .removeClass('flash')
    , 500

  generate_passwords = ->
    # serialize the form elements into an object with name: value pairs
    options = $('form').serializeObject()

    passwords = []
    for i in [1..PASSWORD_COUNT] by 1
      words_needed = parseInt(options.words) + 2 * parseInt(options.numbers) + 2 * parseInt(options.symbols)
      rand_words = sjcl.random.randomWords(words_needed)
      # convert random words to floats (0..1), by multiplying the unsigned value by 2^-32
      rand_values = (((w >>> 0) * 2.3283064365386963e-10) for w in rand_words)
      password = []
      # generate a password based on options
      for j in [1..options.words] by 1
        rand_selection = Math.floor(rand_values.pop() * WORDS.length)
        word = WORDS[rand_selection]
        word = uc_first word if options.caps == 'yes'
        password.push word
      # insert number?
      for k in [0...options.numbers] by 1
        at = Math.floor(rand_values.pop() * (password.length + 1))
        password.splice at, 0, Math.floor(rand_values.pop() * 10)
      # insert symbol?
      for k in [0...options.symbols] by 1
        at = Math.floor(rand_values.pop() * (password.length + 1))
        password.splice at, 0, SYMBOLS[Math.floor(rand_values.pop() * SYMBOLS.length)]
      passwords.push password
    passwords

  uc_first = (s) ->
    s.charAt(0).toUpperCase() + s.slice(1)

  # generate passwords on init and when select values change
  update = (event) ->
    display_passwords generate_passwords()

  update()

  $('select').on 'change', (event) -> update()
  $('#generate').on 'click', (event) ->
    update()
    false

jQuery ->
  if sjcl.random.isReady()
    start()
  else
    sjcl.random.startCollectors()
    sjcl.random.addEventListener 'seeded', -> start()
    sjcl.random.addEventListener 'progress', (p) -> $('.progress-bar .inner').width((100 * p) + '%')